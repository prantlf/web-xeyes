{"version":3,"file":"x-eyes.js","sourceRoot":"","sources":["../../../src/components/x-eyes/x-eyes.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable-next-line @typescript-eslint/no-unused-vars */\nimport { Component, Prop, Event, EventEmitter, Watch, Host, Method, h } from '@stencil/core'\nimport {\n  attachEye, detachEye, startFollowing, stopFollowing, Eye, Radius\n} from './eye'\n\nexport type Position = 'center' | 'top' | 'bottom' | 'left' | 'right' |\n  'topRight' | 'topLeft' | 'bottomRight' | 'bottomLeft' | number\n\n/**\n * Shows a pair of eyes following movements of the mouse cursor on the page.\n */\n@Component({ tag: 'x-eyes', styleUrl: 'x-eyes.css', shadow: true })\nexport class XEyesElement {\n  /**\n   * Delay the reaction of the eye of the mouse cursor movement.\n   * A number representing a time period in milliseconds is expected.\n   */\n  @Prop({ reflect: true }) delay = 0\n  /**\n   * The minimum distance of the iris from the eye rim to keep when following\n   * the mouse cursor movements.\n   */\n  @Prop({ reflect: true }) distance = 0\n  /**\n   * The starting position of the pupil in the vitreous. Either a position\n   * constant or a number representing an angle in degrees near the eye rim\n   * to place the pupil to.\n   */\n  @Prop({ reflect: true }) position: Position = 'center'\n  /**\n   * The clipping path of the movement of the eye pupil. Either the natural\n   * area of the eye vitreous, or only a circle in the middle of it.\n   */\n  @Prop({ reflect: true }) radius: Radius = 'natural'\n  /**\n   * Moves the pupil to the starting position specified by the `position`\n   * property, when the mouse cursor leaves the page boundary.\n   */\n  @Prop({ reflect: true }) reset = false\n\n  /**\n   * Emitted whenever the pupil position gets reset to the original value.\n   */\n  @Event({ eventName: 'resetposition' }) resetPositionEvent: EventEmitter<undefined>;\n\n  @Watch('delay')\n  validateDelay(newValue: string): void {\n    checkPositiveInteger('delay', newValue)\n  }\n\n  @Watch('distance')\n  validateDistance(newValue: string): void {\n    checkPositiveInteger('distance', newValue)\n  }\n\n  @Watch('position')\n  validatePosition(newValue: string): void {\n    if (newValue != null && newValue !== '' &&\n        newValue !== 'center' && newValue !== 'top' &&\n        newValue !== 'bottom' && newValue !== 'left' &&\n        newValue !== 'right' && newValue !== 'topRight' &&\n        newValue !== 'topLeft' && newValue !== 'bottomRight' &&\n        newValue !== 'bottomLeft' && !isPositiveInteger(newValue)) {\n      throw new Error('position has to be \"center\", \"top\", \"bottom\", \"left\", \"right\", \"topRight\", \"topLeft\", \"bottomRight\", \"bottomLeft\" or an positive integet, if not empty')\n    }\n  }\n\n  @Watch('radius')\n  validateRadius(newValue: string): void {\n    if (newValue != null && newValue !== '' &&\n        newValue !== 'natural' && newValue !== 'circular') {\n      throw new Error('radius has to be \"natural\" or \"circular\", if not empty')\n    }\n  }\n\n  @Watch('reset')\n  validateReset(newValue: string | boolean): void {\n    if (newValue != null && newValue !== '' &&\n        newValue !== 'true' && newValue !== 'false' &&\n        newValue !== true && newValue !== false) {\n      throw new Error('reset has to be a boolean, if not empty')\n    }\n  }\n\n  private leftIrisEl: HTMLElement\n  private rightIrisEl: HTMLElement\n\n  private leftEye: Eye\n  private rightEye: Eye\n\n  render(): HTMLElement {\n    return <Host>\n  <div class=\"eye\">\n    <div class=\"iris\" ref={el => this.leftIrisEl = el}></div>\n  </div>\n  <div class=\"eye\">\n    <div class=\"iris\" ref={el => this.rightIrisEl = el}></div>\n  </div>\n</Host>\n  }\n\n  /**\n   * Enables the eye pupil to follow the mouse cursor movements. This happens\n   * automatically after inserting the element and can be changed by calling\n   * `stopFollowing`.\n   * Returns `true` if the movements started.\n   */\n  @Method()\n  async startFollowing(): Promise<boolean> {\n    if (this.leftEye && !this.leftEye.mousemove) {\n      startFollowing(this.leftEye)\n      startFollowing(this.rightEye)\n      return true\n    }\n  }\n\n  /**\n   * Disables the eye pupil to follow the mouse cursor movements. The mouse\n   * cursor movements can be followed again by calling `startFollowing`.\n   * Returns `true` if the movements stopped.\n   */\n  @Method()\n  async stopFollowing(): Promise<boolean> {\n    if (this.leftEye && this.leftEye.mousemove) {\n      stopFollowing(this.leftEye)\n      stopFollowing(this.rightEye)\n      return true\n    }\n  }\n\n  /**\n   * Sets the position of the eye pupil to the initial value set by `position`.\n   * Returns `true` if the position was reset.\n   */\n  @Method()\n  async resetPosition(): Promise<boolean> {\n    if (this.leftEye) {\n      this.leftEye.setPosition(this.position)\n      this.rightEye.setPosition(this.position)\n      return true\n    }\n  }\n\n  connectedCallback(): void {\n    this.startFollowing()\n  }\n\n  componentWillRender(): void {\n    if (this.leftEye) {\n      this.stopFollowing()\n      detachEye(this.leftEye)\n      detachEye(this.rightEye)\n    }\n  }\n\n  componentDidRender(): void {\n    const { delay, distance, position, radius, reset } = this\n    const onReset = (): void => { this.resetPositionEvent.emit() }\n    const options = { delay, distance, position, radius, reset, onReset }\n    this.leftEye = attachEye(this.leftIrisEl, options)\n    this.rightEye = attachEye(this.rightIrisEl, options)\n    this.startFollowing()\n  }\n\n  disconnectedCallback(): void {\n    this.stopFollowing()\n  }\n}\n\nfunction checkPositiveInteger(name: string, value: string): void {\n  if (value == null || value === '') return\n  if (!isPositiveInteger(value)) throw new Error(`${name} has to be a positive integer, if not empty`)\n}\n\nfunction isPositiveInteger(value: string): boolean {\n  const number = +value;\n  return number >= 0  && number === Math.floor(number)\n}\n"]}